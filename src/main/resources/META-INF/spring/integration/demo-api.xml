<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/integration
    http://www.springframework.org/schema/integration/spring-integration.xsd
    http://www.springframework.org/schema/integration/http
    http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
		http://www.springframework.org/schema/integration/stream
		https://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd">

    <!-- CHANNEL -->
    <int:channel id="requestChannel" />
    <int:channel id="outputChannel" />
    <int:channel id="outputChannel2" />

    <int:channel id="proces" />

    <int-http:inbound-gateway request-channel="requestChannel"
                              reply-channel="outputChannel" supported-methods="GET"
                              path="/getall">

        <int-http:request-mapping consumes="application/json" produces="application/json" />
    </int-http:inbound-gateway>

    <int:service-activator ref="inboundEnpoint"
                           method="get" input-channel="requestChannel" output-channel="outputChannel" />

    <int:gateway id="crm" service-interface="com.example.springintegration.Crm"/>

    <!-- each order has a collection of order items that is split apart to be processed -->
    <int:channel id="reqs"/>

    <int:service-activator input-channel="reqs" ref="service" method="serve" output-channel="ress"/>

    <!-- drink order items are aggregated in a call to the waiter -->
    <int-stream:stdout-channel-adapter id="ress"/>

    <!-- drink order items are aggregated in a call to the waiter -->


</beans>